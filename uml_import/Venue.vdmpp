class Venue is subclass of Place
	instance variables
	  capacity: nat1;
	  lighting: seq of char;
	  sound: seq of char;
	  public gigs: set of Gig;
		inv capacity > 0;
		inv not exists g1, g2 in set gigs &
	  		g1 <> g2 and g1.getDate() = g2.getDate();
	  
	operations
		-- creates a venue with the following arguments: the place owner, the location (string), the stage area (m2)
		-- the capacity (integer), a brief description of the lighting conditions (string) as well as the sound description
		public Venue : PlaceOwner * seq of char * nat1 * nat1 * seq of char * seq of char ==> Venue
		Venue(po, loc, sa, cap, lig, s) == (
			placeOwner := po;
			location := loc;
			stageArea := sa;
			capacity := cap;
			lighting := lig;
			sound := s;
			gigs := {};
			AdvertisingBoard`addPlace(self);
			return self;
		)
		pre cap > 0	
		post capacity > 0;
		
		-- sets the venue gigs
		public setGigs: set of Gig ==> bool
	  setGigs(g) == (
	  	gigs := g;
	  	return true;
	  )
	  post gigs = g;
		
		-- changes the venue capacity
		public changeCapacity : nat1 ==> ()
		changeCapacity(nc) == (
			capacity := nc;
		)
		pre capacity <> nc
		post capacity = nc;
		
		-- changes the venue lighting description
		public changeLighting : seq of char ==> ()
		changeLighting(nl) == (
			lighting := nl;
		)
		pre lighting <> nl
		post lighting = nl;
		
		-- changes the venue sound description
		public changeSound : seq of char ==> ()
		changeSound(ns) == (
			sound := ns;
		)
		pre sound <> ns
		post sound = ns;
		
		-- returns the capacity of the venue
		public getCapacity: () ==> nat1
		getCapacity() == (
			return capacity;
		)
		post capacity = capacity~;
		
		-- returns the venue lighting description
		public getLighting: () ==> seq of char
		getLighting() == (
			return lighting;
		)
		post lighting = lighting~;
		
		-- returns the venue sound description
		public getSound: () ==> seq of char
		getSound() == (
			return sound;
		)
		post sound = sound~;
		
		-- returns true if the venue is available on a given date, false otherwise
		public isAvailable: JyveUtils`Date ==> bool
		isAvailable(date) == (
			for all gig in set gigs do (
				if gig.getDate() = date then
					return false;
			);
			
			return true;
		)
		
end Venue
